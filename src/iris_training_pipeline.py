# -*- coding: utf-8 -*-
"""Iris_Training_Pipeline

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yPXsNY3nFGaRSO9zIULlbNuU6mr5HA26
"""

import kagglehub
import pandas as pd
import os
from sklearn.model_selection import train_test_split

# Tải Iris dataset
path = kagglehub.dataset_download("uciml/iris")

# Tạo đường dẫn đầy đủ
csv_path = os.path.join(path, "Iris.csv")

# Đọc file CSV
df = pd.read_csv(csv_path)

# Chia X và y
X = df.drop(columns=["Species", "Id"])
y = df["Species"]

# Phân chia train/test
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42, stratify=y
)

print(f"Train set: {X_train.shape}, Test set: {X_test.shape}")

from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

# Khởi tạo mô hình
model = LogisticRegression(max_iter=200)

# Huấn luyện
model.fit(X_train, y_train)

# Dự đoán trên tập test
y_pred = model.predict(X_test)

# Đánh giá
print(f"Độ chính xác: {accuracy_score(y_test, y_pred):.2f}")
print("\nClassification Report:")
print(classification_report(y_test, y_pred))

from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

# Khởi tạo mô hình
rf_model = RandomForestClassifier(n_estimators=100, random_state=42)

# Huấn luyện
rf_model.fit(X_train, y_train)

# Dự đoán
y_pred_rf = rf_model.predict(X_test)

# Đánh giá
print(f"Độ chính xác (Random Forest): {accuracy_score(y_test, y_pred_rf):.2f}")
print("\nClassification Report (Random Forest):")
print(classification_report(y_test, y_pred_rf))

from sklearn.neighbors import KNeighborsClassifier

knn = KNeighborsClassifier(n_neighbors=3)
knn.fit(X_train, y_train)
y_pred_knn = knn.predict(X_test)
print(f"Độ chính xác (KNN): {accuracy_score(y_test, y_pred_knn):.2f}")
print("\nClassification Report (KNN):")
print(classification_report(y_test, y_pred_knn))

from sklearn.svm import SVC

svm = SVC(kernel='rbf', C=1, gamma='auto')
svm.fit(X_train, y_train)
y_pred_svm = svm.predict(X_test)
print(f"Độ chính xác (Random Forest): {accuracy_score(y_test, y_pred_svm):.2f}")
print("\nClassification Report (Random Forest):")
print(classification_report(y_test, y_pred_svm))